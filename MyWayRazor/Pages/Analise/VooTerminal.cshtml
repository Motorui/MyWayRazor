@page
@model MyWayRazor.Pages.Analise.VooTerminalModel
@{
    ViewData["Title"] = "VooTerminal";
    Layout = "~/Pages/Shared/_Layout.cshtml";

    #region variables

    var Today = DateTime.UtcNow.Day;

    int[] dataHour = Model.AssistenciasPRMs.Select(h => h.Data.Hour).Distinct().ToArray();
    int[] estimaHour = Model.AssistenciasPRMs.Select(h => h.EstimaApresentacao.Hour).Distinct().ToArray();
    int[] embarqueHour = Model.AssistenciasPRMs.Select(h => h.HoraEmbarque.Hour).Distinct().ToArray();
    int[] tempHours = dataHour.Union(estimaHour).ToArray();
    int[] Hours = tempHours.Union(embarqueHour).ToArray();

    Array.Sort(Hours);

    #endregion
}

<section class="content">
    <div class="row">
        <div class="col-sm-2 col-md-4">
            <div class="box ">
                <div class="box-header">
                    <h3 class="box-title">Total de Voos por BRD/STA:</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <table id="VoosTotalTbl" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Hora:</th>
                                <th>Partidas:</th>
                                <th>Chegadas:</th>
                                <th>Total:</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var items in Hours
                               .Select(h => new
                               {
                                   Hora = h,
                                   Dep = Model.AssistenciasPRMs
                                       .Where(d => d.Mov == "D")
                                       .Select(v => new { v.Voo, v.HoraEmbarque }).Distinct()
                                       .Count(m => m.HoraEmbarque.Hour == h),
                                   Arr = Model.AssistenciasPRMs
                                       .Where(d => d.Mov == "A")
                                       .Select(v => new { v.Voo, v.Data }).Distinct()
                                       .Count(m => m.Data.Hour == h),
                                   Total = Model.AssistenciasPRMs
                                       .Select(v => new { v.Voo, v.Data }).Distinct()
                                       .Count(m => m.Data.Hour == h)
                               }
                           )
                           .OrderBy(h => h.Hora)
                           )
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.Hora):00
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.Dep)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.Arr)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.Total)
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th>Totais: </th>
                                <th>@Model.TotalDep</th>
                                <th>@Model.TotalArr</th>
                                <th>@Model.TotalVoos</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-sm-2 col-md-4">
            <div class="box ">
                <div class="box-header">
                    <h3 class="box-title">Voos a partir por Hora de embarque:</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <table id="VoosPorOrigemTbl" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Hora:</th>
                                <th>Schengen:</th>
                                <th>NSchengen:</th>
                                <th>Terminal2:</th>
                                <th>Total:</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var items in Hours
                         .Select(h => new
                         {
                             Hora = h,
                             DepS = Model.AssistenciasPRMs
                                 .Where(d => d.Mov == "D"
                                      && Model.GateSchengen.Contains(d.Gate))
                                 .Select(v => new { v.Voo, v.HoraEmbarque }).Distinct()
                                 .Count(m => m.HoraEmbarque.Hour == h),
                             DepN = Model.AssistenciasPRMs
                                 .Where(d => d.Mov == "D"
                                      && Model.GateNSchengen.Contains(d.Gate))
                                 .Select(v => new { v.Voo, v.Data }).Distinct()
                                 .Count(m => m.Data.Hour == h),
                             DepT2 = Model.AssistenciasPRMs
                                 .Where(d => d.Mov == "D"
                                       && Model.GateT2.Contains(d.Gate))
                                 .Select(v => new { v.Voo, v.Data }).Distinct()
                                 .Count(m => m.Data.Hour == h),
                             Total = Model.AssistenciasPRMs
                                   .Where(d => d.Mov == "D")
                                 .Select(v => new { v.Voo, v.Data }).Distinct()
                                 .Count(m => m.Data.Hour == h)
                         }
                             )
                             .OrderBy(h => h.Hora)
                             )
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.Hora):00
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.DepS)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.DepN)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.DepT2)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.Total)
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th>Totais: </th>
                                <th>@Model.TotalDepS</th>
                                <th>@Model.TotalDepN</th>
                                <th>@Model.TotalDepT2</th>
                                <th>@Model.TotalDep</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-sm-2 col-md-4">
            <div class="box ">
                <div class="box-header">
                    <h3 class="box-title">PMR - Chegadas STA:</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <table id="ChegadasTbl" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Hora:</th>
                                <th>Schengen:</th>
                                <th>NSchengen:</th>
                                <th>Trnf. S:</th>
                                <th>Trnf. N:</th>
                                <th>Total:</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var items in Hours
                           .Select(h => new
                           {
                               Hora = h,
                               ArrSchengen = Model.AssistenciasPRMs
                                   .Where(d => d.Mov == "A"
                                        && Model.SaidaSchengen.Contains(d.Exit))
                                   .Select(v => new { v.Voo, v.HoraEmbarque }).Distinct()
                                   .Count(m => m.HoraEmbarque.Hour == h),
                               ArrNSchengen = Model.AssistenciasPRMs
                                   .Where(d => d.Mov == "A"
                                        && d.Exit == "N")
                                   .Select(v => new { v.Voo, v.Data }).Distinct()
                                   .Count(m => m.Data.Hour == h),
                               ArrTransferSchengen = Model.AssistenciasPRMs
                                   .Where(d => d.Mov == "A"
                                        && d.Exit == "S"
                                        && d.Transferencia == "T")
                                   .Select(v => new { v.Voo, v.Data }).Distinct()
                                   .Count(m => m.Data.Hour == h),
                               ArrTransferNSchengen = Model.AssistenciasPRMs
                                     .Where(d => d.Mov == "A"
                                        && d.Exit == "N"
                                        && d.Transferencia == "T")
                                   .Select(v => new { v.Voo, v.Data }).Distinct()
                                   .Count(m => m.Data.Hour == h),
                               ArrTotal = Model.AssistenciasPRMs
                                     .Where(d => d.Mov == "A")
                                   .Select(v => new { v.Voo, v.Data }).Distinct()
                                   .Count(m => m.Data.Hour == h)
                           }
                           )
                           .OrderBy(h => h.Hora)
                           )
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.Hora):00
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.ArrSchengen)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.ArrNSchengen)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.ArrTransferSchengen)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.ArrTransferNSchengen)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => items.ArrTotal)
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th>Totais: </th>
                                <th>@Model.TotalArrSchengen</th>
                                <th>@Model.TotalArrNSchengen</th>
                                <th>@Model.TotalTranSchengen</th>
                                <th>@Model.TotalTranNSchengen</th>
                                <th>@Model.TotalArr</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">Tabela</h3>

                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="canvas"></canvas>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts
    {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js"></script>
    <script src="~/AdminLTE/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript">
    var labelArray = [];
    var dataChegadas = [];
    var dataPartidas = [];
    var dataTotal = [];

    @foreach (var items in Hours
       .Select(h => new
       {
           hora = h,
           Arr = Model.AssistenciasPRMs
                    .Where(d => d.Mov == "A")
                    .Select(v => new { v.Voo, v.Data }).Distinct()
                .Count(m => m.Data.Hour == h),
           Dep = Model.AssistenciasPRMs
                    .Where(d => d.Mov == "D")
                    .Select(v => new { v.Voo, v.Data }).Distinct()
                .Count(m => m.Data.Hour == h),
           Total = Model.AssistenciasPRMs
                    .Select(v => new { v.Voo, v.Data }).Distinct()
                .Count(m => m.Data.Hour == h)
       }
       ).OrderBy(h => h.hora))
    {
        @: labelArray.push("@Html.DisplayFor(modelItem => items.hora):00");
        @: dataChegadas.push("@Html.DisplayFor(modelItem => items.Arr)");
        @: dataPartidas.push("@Html.DisplayFor(modelItem => items.Dep)");
        @: dataTotal.push("@Html.DisplayFor(modelItem => items.Total)");
    }
    </script>

    <script type="text/javascript">
        var chartData = {
            labels: labelArray,
            datasets: [
                {
                    type: 'line',
                    label: 'Total',
                    borderColor: 'rgb(54, 162, 235)',
                    borderWidth: 2,
                    fill: false,
                    data: dataTotal
                }, {
                    type: 'bar',
                    label: 'Partidas',
                    backgroundColor: 'rgb(75, 192, 192)',
                    data: dataPartidas
                }, {
                    type: 'bar',
                    label: 'Chegadas',
                    backgroundColor: 'rgb(255, 99, 132)',
                    data: dataChegadas
                }
            ]

        };
        window.onload = function () {
            var ctx = document.getElementById('canvas').getContext('2d');
            window.myMixedChart = new Chart(ctx, {
                type: 'bar',
                data: chartData,
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: 'Total de VOOS por BRD/STA:'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: true
                    }
                }
            });
        };

        $('#datepicker').datepicker({
            isRTL: false,
            format: 'dd-mm-yyyy',
            autoclose: true,
            language: 'Pt'
        });

    </script>
}

